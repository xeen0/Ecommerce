{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport { ShopActionTypes } from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { collectionsFetchingSuccess } from './shop.actions';\nexport function* fetchCollectionAsync() {\n  yield console.log('I am Fired');\n  const collectionRef = firestore.collection(\"collections\");\n  const snapshot = yield collectionRef.get();\n  const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n  yield put(collectionsFetchingSuccess(collectionsMap)); //    const collectionRef = firestore.collection(\"collections\");\n  //     dispatch(collectionsFecthingStart());\n  //     collectionRef\n  //       .get()\n  //       .then(async snapshot => {\n  //         const mapCollection = convertCollectionsSnapshotToMap(snapshot);\n  //         dispatch(collectionsFetchingSuccess(mapCollection));\n  //       })\n  //       .catch(error => dispatch(error.message));\n}\nexport function* fetchCollectionStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTION_START, fetchCollectionAsync);\n}","map":{"version":3,"sources":["D:\\React\\Ecommerce\\src\\redux\\shop\\shop.sagas.js"],"names":["takeEvery","call","put","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","collectionsFetchingSuccess","fetchCollectionAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","fetchCollectionStart","FETCH_COLLECTION_START"],"mappings":"AAAA,SAAQA,SAAR,EAAkBC,IAAlB,EAAuBC,GAAvB,QAAiC,oBAAjC;AACA,SAAQC,eAAR,QAA8B,cAA9B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SAASC,0BAAT,QAA2C,gBAA3C;AACA,OAAO,UAAUC,oBAAV,GAAgC;AACpC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AACA,QAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,QAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,QAAMC,cAAc,GAAG,MAAMb,IAAI,CAACI,+BAAD,EAAiCO,QAAjC,CAAjC;AACA,QAAMV,GAAG,CAACI,0BAA0B,CAACQ,cAAD,CAA3B,CAAT,CALoC,CAQvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC;AACD,OAAO,UAAUC,oBAAV,GAAkC;AACxC,QAAMf,SAAS,CAACG,eAAe,CAACa,sBAAjB,EAAwCT,oBAAxC,CAAf;AACA","sourcesContent":["import {takeEvery,call,put} from 'redux-saga/effects'\r\nimport {ShopActionTypes} from './shop.types'\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\r\nimport { collectionsFetchingSuccess } from './shop.actions';\r\nexport function* fetchCollectionAsync(){\r\n   yield console.log('I am Fired')\r\n   const collectionRef = firestore.collection(\"collections\");\r\n   const snapshot = yield collectionRef.get()\r\n   const collectionsMap = yield call(convertCollectionsSnapshotToMap,snapshot)\r\n   yield put(collectionsFetchingSuccess(collectionsMap))\r\n\r\n\r\n//    const collectionRef = firestore.collection(\"collections\");\r\n//     dispatch(collectionsFecthingStart());\r\n//     collectionRef\r\n//       .get()\r\n//       .then(async snapshot => {\r\n//         const mapCollection = convertCollectionsSnapshotToMap(snapshot);\r\n//         dispatch(collectionsFetchingSuccess(mapCollection));\r\n//       })\r\n//       .catch(error => dispatch(error.message));\r\n}\r\nexport function* fetchCollectionStart()  {\r\n yield takeEvery(ShopActionTypes.FETCH_COLLECTION_START,fetchCollectionAsync)\r\n}"]},"metadata":{},"sourceType":"module"}