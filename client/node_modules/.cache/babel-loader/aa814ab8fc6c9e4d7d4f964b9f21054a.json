{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\Ecommerce\\\\src\\\\pages\\\\shopPage\\\\shoppage.component .jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { createStructuredSelector } from \"reselect\";\nimport CollectionsOverview from \"../../components/collection-overview/collection-overview.component\";\nimport CategoryPage from \"../collectionPage/collections.component\";\nimport { connect } from \"react-redux\";\nimport { collectionsFecthingStartAsync } from \"../../redux/shop/shop.actions\";\nimport { isCollectionFetching, isCollectionLoaded } from \"../../redux/shop/shop.selector\";\nimport withSpinner from \"../../components/with-spinner/with-spinner.component\";\nconst CollectionOverviewWithSpinner = withSpinner(CollectionsOverview);\nconst CategoeyPageWithSpinner = withSpinner(CategoryPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const collectionsFecthingStartAsync = this.props.collectionsFecthingStartAsync;\n    collectionsFecthingStartAsync();\n  }\n\n  render() {\n    const match = this.props.match;\n    const _this$props = this.props,\n          isCollectionFetching = _this$props.isCollectionFetching,\n          isCollectionLoaded = _this$props.isCollectionLoaded;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      render: props => React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isLoading: !isCollectionFetching\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: props => React.createElement(CategoeyPageWithSpinner, Object.assign({\n        isLoading: !isCollectionLoaded\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProp = createStructuredSelector({\n  isCollectionFetching,\n  isCollectionLoaded\n});\n\nconst mapToDispatch = dispatch => ({\n  collectionsFecthingStartAsync: () => dispatch(collectionsFecthingStartAsync())\n});\n\nexport default connect(mapStateToProp, mapToDispatch)(ShopPage);","map":{"version":3,"sources":["D:\\React\\Ecommerce\\src\\pages\\shopPage\\shoppage.component .jsx"],"names":["React","Route","createStructuredSelector","CollectionsOverview","CategoryPage","connect","collectionsFecthingStartAsync","isCollectionFetching","isCollectionLoaded","withSpinner","CollectionOverviewWithSpinner","CategoeyPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","path","mapStateToProp","mapToDispatch","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAOC,mBAAP,MAAgC,oEAAhC;AACA,OAAOC,YAAP,MAAyB,yCAAzB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,6BAAT,QAA8C,+BAA9C;AACA,SAASC,oBAAT,EAA8BC,kBAA9B,QAAuD,gCAAvD;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,6BAA6B,GAAGD,WAAW,CAACN,mBAAD,CAAjD;AACA,MAAMQ,uBAAuB,GAAGF,WAAW,CAACL,YAAD,CAA3C;;AACA,MAAMQ,QAAN,SAAuBZ,KAAK,CAACa,SAA7B,CAAuC;AACrCC,EAAAA,iBAAiB,GAAG;AAAA,UACVR,6BADU,GACwB,KAAKS,KAD7B,CACVT,6BADU;AAElBA,IAAAA,6BAA6B;AAC9B;;AAEDU,EAAAA,MAAM,GAAG;AAAA,UACCC,KADD,GACW,KAAKF,KADhB,CACCE,KADD;AAAA,wBAE8C,KAAKF,KAFnD;AAAA,UAECR,oBAFD,eAECA,oBAFD;AAAA,UAEuBC,kBAFvB,eAEuBA,kBAFvB;AAGP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,YAAKS,KAAK,CAACC,IAAX,CAFN;AAGE,MAAA,MAAM,EAAEH,KAAK,IACX,oBAAC,6BAAD;AACE,QAAA,SAAS,EAAE,CAACR;AADd,SAEMQ,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAYE,oBAAC,KAAD;AACE,MAAA,IAAI,YAAKE,KAAK,CAACC,IAAX,mBADN;AAEE,MAAA,MAAM,EAAEH,KAAK,IACX,oBAAC,uBAAD;AACE,QAAA,SAAS,EAAE,CAACP;AADd,SAEMO,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CADF;AAwBD;;AAjCoC;;AAmCvC,MAAMI,cAAc,GAAGjB,wBAAwB,CAAC;AAC9CK,EAAAA,oBAD8C;AAE9CC,EAAAA;AAF8C,CAAD,CAA/C;;AAIA,MAAMY,aAAa,GAAGC,QAAQ,KAAK;AACjCf,EAAAA,6BAA6B,EAAE,MAAMe,QAAQ,CAACf,6BAA6B,EAA9B;AADZ,CAAL,CAA9B;;AAIA,eAAeD,OAAO,CACpBc,cADoB,EAEpBC,aAFoB,CAAP,CAGbR,QAHa,CAAf","sourcesContent":["import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nimport CollectionsOverview from \"../../components/collection-overview/collection-overview.component\";\r\nimport CategoryPage from \"../collectionPage/collections.component\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { collectionsFecthingStartAsync } from \"../../redux/shop/shop.actions\";\r\nimport { isCollectionFetching,isCollectionLoaded} from \"../../redux/shop/shop.selector\";\r\nimport withSpinner from \"../../components/with-spinner/with-spinner.component\";\r\n\r\nconst CollectionOverviewWithSpinner = withSpinner(CollectionsOverview);\r\nconst CategoeyPageWithSpinner = withSpinner(CategoryPage);\r\nclass ShopPage extends React.Component {\r\n  componentDidMount() {\r\n    const { collectionsFecthingStartAsync } = this.props;\r\n    collectionsFecthingStartAsync();\r\n  }\r\n\r\n  render() {\r\n    const { match } = this.props;\r\n    const { isCollectionFetching ,isCollectionLoaded } = this.props;\r\n    return (\r\n      <div className=\"shop-page\">\r\n        <Route\r\n          exact\r\n          path={`${match.path}`}\r\n          render={props => (\r\n            <CollectionOverviewWithSpinner\r\n              isLoading={!isCollectionFetching}\r\n              {...props}\r\n            />\r\n          )}\r\n        />\r\n\r\n        <Route\r\n          path={`${match.path}/:collectionId`}\r\n          render={props => (\r\n            <CategoeyPageWithSpinner\r\n              isLoading={!isCollectionLoaded}\r\n              {...props}\r\n            />\r\n          )}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProp = createStructuredSelector({\r\n  isCollectionFetching,\r\n  isCollectionLoaded\r\n});\r\nconst mapToDispatch = dispatch => ({\r\n  collectionsFecthingStartAsync: () => dispatch(collectionsFecthingStartAsync())\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProp,\r\n  mapToDispatch\r\n)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}