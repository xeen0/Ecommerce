{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\Ecommerce\\\\src\\\\pages\\\\shopPage\\\\shoppage.component .jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport CollectionsOverview from \"../../components/collection-overview/collection-overview.component\";\nimport CategoryPage from \"../collectionPage/collections.component\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { connect } from \"react-redux\";\nimport { UpdateCollection } from \"../../redux/shop/shop.actions\";\nimport withSpinner from \"../../components/with-spinner/with-spinner.component\";\nconst collectionOverviewWithSpinner = withSpinner(CollectionsOverview);\nconst categoeyPageWithSpinner = withSpinner(CategoryPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unSubscribeFromAuth = null;\n    this.state = {\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    const UpdateCollection = this.props.UpdateCollection;\n    const collectionRef = firestore.collection(\"collections\");\n    collectionRef.onSnapshot(async snapshot => {\n      const mapCollection = convertCollectionsSnapshotToMap(snapshot);\n      UpdateCollection(mapCollection);\n      this.setState({\n        isLoading: false\n      });\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    const isLoading = this.state.isLoading;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      render: props => React.createElement(\"collectionOverviewWithSpinner\", Object.assign({\n        isLoading: isLoading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      component: CategoryPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapToDispatch = dispatch => ({\n  UpdateCollection: mapCollection => dispatch(UpdateCollection(mapCollection))\n});\n\nexport default connect(null, mapToDispatch)(ShopPage);","map":{"version":3,"sources":["D:\\React\\Ecommerce\\src\\pages\\shopPage\\shoppage.component .jsx"],"names":["React","Route","CollectionsOverview","CategoryPage","firestore","convertCollectionsSnapshotToMap","connect","UpdateCollection","withSpinner","collectionOverviewWithSpinner","categoeyPageWithSpinner","ShopPage","Component","unSubscribeFromAuth","state","isLoading","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","mapCollection","setState","render","match","path","mapToDispatch","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,mBAAP,MAAgC,oEAAhC;AACA,OAAOC,YAAP,MAAyB,yCAAzB;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,6BAA6B,GAAKD,WAAW,CAACN,mBAAD,CAAnD;AACA,MAAMQ,uBAAuB,GAAGF,WAAW,CAACL,YAAD,CAA3C;;AACA,MAAMQ,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,mBADqC,GACf,IADe;AAAA,SAErCC,KAFqC,GAE7B;AACNC,MAAAA,SAAS,EAAG;AADN,KAF6B;AAAA;;AAKrCC,EAAAA,iBAAiB,GAAG;AAAA,UAETT,gBAFS,GAEW,KAAKU,KAFhB,CAETV,gBAFS;AAGlB,UAAMW,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACzC,YAAMC,aAAa,GAAGjB,+BAA+B,CAACgB,QAAD,CAArD;AACAd,MAAAA,gBAAgB,CAACe,aAAD,CAAhB;AACA,WAAKC,QAAL,CAAc;AAACR,QAAAA,SAAS,EAAG;AAAb,OAAd;AACD,KAJD;AAKD;;AAEDS,EAAAA,MAAM,GAAG;AAAA,UAECC,KAFD,GAEW,KAAKR,KAFhB,CAECQ,KAFD;AAAA,UAGAV,SAHA,GAGa,KAAKD,KAHlB,CAGAC,SAHA;AAIP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKU,KAAK,CAACC,IAAX,CAAjB;AAAoC,MAAA,MAAM,EAAET,KAAK,IAAI;AAA+B,QAAA,SAAS,EAAEF;AAA1C,SAAwDE,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAIE,oBAAC,KAAD;AAAO,MAAA,IAAI,YAAKQ,KAAK,CAACC,IAAX,mBAAX;AAA4C,MAAA,SAAS,EAAEvB,YAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAQD;;AA5BoC;;AA+BvC,MAAMwB,aAAa,GAAGC,QAAQ,KAAK;AACjCrB,EAAAA,gBAAgB,EAAEe,aAAa,IAAIM,QAAQ,CAACrB,gBAAgB,CAACe,aAAD,CAAjB;AADV,CAAL,CAA9B;;AAIA,eAAehB,OAAO,CACpB,IADoB,EAEpBqB,aAFoB,CAAP,CAGbhB,QAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport CollectionsOverview from \"../../components/collection-overview/collection-overview.component\";\nimport CategoryPage from \"../collectionPage/collections.component\";\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap\n} from \"../../firebase/firebase.utils\";\n\nimport { connect } from \"react-redux\";\nimport { UpdateCollection } from \"../../redux/shop/shop.actions\";\nimport withSpinner from \"../../components/with-spinner/with-spinner.component\";\n\nconst collectionOverviewWithSpinner  =  withSpinner(CollectionsOverview)\nconst categoeyPageWithSpinner = withSpinner(CategoryPage)\nclass ShopPage extends React.Component {\n  unSubscribeFromAuth = null;\n  state = {\n    isLoading : true\n  }\n  componentDidMount() {\n    \n      const {UpdateCollection} = this.props \n    const collectionRef = firestore.collection(\"collections\");\n    collectionRef.onSnapshot(async snapshot => {\n      const mapCollection = convertCollectionsSnapshotToMap(snapshot);\n      UpdateCollection(mapCollection)\n      this.setState({isLoading : false})\n    });\n  }\n\n  render() {\n    \n    const { match } = this.props;\n    const {isLoading} = this.state\n    return (\n      <div className=\"shop-page\">\n        <Route exact path={`${match.path}`} render={props => <collectionOverviewWithSpinner isLoading={isLoading}{...props}/>} />\n\n        {/* <Route exact path={`${match.path}`} component={CollectionsOverview} /> */}\n        <Route path={`${match.path}/:collectionId`} component={CategoryPage} />\n      </div>\n    );\n  }\n}\n\nconst mapToDispatch = dispatch => ({\n  UpdateCollection: mapCollection => dispatch(UpdateCollection(mapCollection))\n});\n\nexport default connect(\n  null,\n  mapToDispatch\n)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}