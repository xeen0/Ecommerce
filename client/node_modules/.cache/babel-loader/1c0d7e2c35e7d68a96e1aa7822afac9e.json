{"ast":null,"code":"var _jsxFileName = \"/mnt/B48E87058E86BF7C/React/Ecommerce/src/pages/collectionPage/collections.component.jsx\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { selectCollection } from \"../../redux/shop/shop.selector\";\nimport CollectionItem from \"../../components/collection-item/collection-item.component\";\nimport { firestore } from \"../../firebase/firebase.utils\";\nimport \"./collections.styles.scss\";\n\nconst CollectionPage = ({\n  collection\n}) => {\n  useEffect(() => {\n    const unsubscribeFromCollection = firestore.collection(\"collections\").onSnapshot(snapshot => console.log(snapshot)); // clean up function which executes while unmounting component\n\n    return () => {\n      unsubscribeFromCollection();\n    };\n  }, []);\n  const items = collection.items,\n        title = collection.title;\n  return React.createElement(\"div\", {\n    className: \"collection-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, title), React.createElement(\"div\", {\n    className: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, items.map(item => React.createElement(CollectionItem, {\n    key: item.id,\n    item: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }))));\n};\n\nconst mapStateToProps = (state, props) => ({\n  collection: selectCollection(props.match.params.collectionId)(state)\n});\n\nexport default connect(mapStateToProps)(CollectionPage);","map":{"version":3,"sources":["/mnt/B48E87058E86BF7C/React/Ecommerce/src/pages/collectionPage/collections.component.jsx"],"names":["React","useEffect","connect","selectCollection","CollectionItem","firestore","CollectionPage","collection","unsubscribeFromCollection","onSnapshot","snapshot","console","log","items","title","map","item","id","mapStateToProps","state","props","match","params","collectionId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AACA,OAAOC,cAAP,MAA2B,4DAA3B;AACA,SAASC,SAAT,QAA0B,+BAA1B;AACA,OAAO,2BAAP;;AACA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AACzCN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,yBAAyB,GAAGH,SAAS,CACxCE,UAD+B,CACpB,aADoB,EAE/BE,UAF+B,CAEpBC,QAAQ,IAAIC,OAAO,CAACC,GAAR,CAAYF,QAAZ,CAFQ,CAAlC,CADc,CAId;;AACA,WAAO,MAAM;AACXF,MAAAA,yBAAyB;AAC1B,KAFD;AAGD,GARQ,EAQN,EARM,CAAT;AADyC,QAWjCK,KAXiC,GAWhBN,UAXgB,CAWjCM,KAXiC;AAAA,QAW1BC,KAX0B,GAWhBP,UAXgB,CAW1BO,KAX0B;AAYzC,SACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBA,KAAxB,CADF,EAEE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACE,GAAN,CAAUC,IAAI,IACb,oBAAC,cAAD;AAAgB,IAAA,GAAG,EAAEA,IAAI,CAACC,EAA1B;AAA8B,IAAA,IAAI,EAAED,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAFF,CADF;AAUD,CAtBD;;AAwBA,MAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,KAAR,MAAmB;AACzCb,EAAAA,UAAU,EAAEJ,gBAAgB,CAACiB,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,YAApB,CAAhB,CAAkDJ,KAAlD;AAD6B,CAAnB,CAAxB;;AAIA,eAAejB,OAAO,CAACgB,eAAD,CAAP,CAAyBZ,cAAzB,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectCollection } from \"../../redux/shop/shop.selector\";\r\nimport CollectionItem from \"../../components/collection-item/collection-item.component\";\r\nimport { firestore } from \"../../firebase/firebase.utils\";\r\nimport \"./collections.styles.scss\";\r\nconst CollectionPage = ({ collection }) => {\r\n  useEffect(() => {\r\n    const unsubscribeFromCollection = firestore\r\n      .collection(\"collections\")\r\n      .onSnapshot(snapshot => console.log(snapshot));\r\n    // clean up function which executes while unmounting component\r\n    return () => {\r\n      unsubscribeFromCollection();\r\n    };\r\n  }, []);\r\n\r\n  const { items, title } = collection;\r\n  return (\r\n    <div className=\"collection-page\">\r\n      <div className=\"title\">{title}</div>\r\n      <div className=\"item\">\r\n        {items.map(item => (\r\n          <CollectionItem key={item.id} item={item}></CollectionItem>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n  collection: selectCollection(props.match.params.collectionId)(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(CollectionPage);\r\n"]},"metadata":{},"sourceType":"module"}