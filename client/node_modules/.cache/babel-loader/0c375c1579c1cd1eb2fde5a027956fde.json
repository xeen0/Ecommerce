{"ast":null,"code":"import _defineProperty from \"/mnt/B48E87058E86BF7C/React/Ecommerce/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { takeLatest, call, all, put } from \"redux-saga/effects\";\nimport { googleSignInSucess, googleSignInFailure, emailSignInFailure, emailSignInSuccess } from \"./user.actions\";\nimport UserActionTypes from \"./user.types\";\nimport { auth, googleProvider, createUserProfileDocument, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapShot = yield userRef.get();\n    yield put(googleSignInSucess(_objectSpread({\n      id: userSnapShot.id\n    }, userSnapShot.data())));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload\n}) {\n  // console.log(email, password);\n  console.log(payload);\n\n  try {// const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    // console.log(user);\n    // const userRef = yield call(createUserProfileDocument, user);\n    // const userSnapShot = yield userRef.get();\n    // yield put(\n    //   emailSignInSuccess({ id: userSnapShot.id, ...userSnapShot.data() })\n    // );\n  } catch (error) {\n    yield put(emailSignInFailure(error));\n  }\n}\nexport function* onGoogleSignStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGNIN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGNIN_START, signInWithEmail);\n}\nexport function* UserSaga() {\n  yield all([call(onGoogleSignStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/mnt/B48E87058E86BF7C/React/Ecommerce/src/redux/user/user.sagas.js"],"names":["takeLatest","call","all","put","googleSignInSucess","googleSignInFailure","emailSignInFailure","emailSignInSuccess","UserActionTypes","auth","googleProvider","createUserProfileDocument","convertCollectionsSnapshotToMap","signInWithGoogle","signInWithPopup","user","userRef","userSnapShot","get","id","data","error","signInWithEmail","payload","console","log","onGoogleSignStart","GOOGLE_SIGNIN_START","onEmailSignInStart","EMAIL_SIGNIN_START","UserSaga"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AAEA,SACEC,kBADF,EAEEC,mBAFF,EAGEC,kBAHF,EAIEC,kBAJF,QAKO,gBALP;AAMA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SACEC,IADF,EAEEC,cAFF,EAGEC,yBAHF,EAIEC,+BAJF,QAKO,+BALP;AAMA,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AAAA,iBACe,MAAMJ,IAAI,CAACK,eAAL,CAAqBJ,cAArB,CADrB;AAAA,UACMK,IADN,QACMA,IADN;;AAEF,UAAMC,OAAO,GAAG,MAAMf,IAAI,CAACU,yBAAD,EAA4BI,IAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMf,GAAG,CACPC,kBAAkB;AAAGe,MAAAA,EAAE,EAAEF,YAAY,CAACE;AAApB,OAA2BF,YAAY,CAACG,IAAb,EAA3B,EADX,CAAT;AAGD,GAPD,CAOE,OAAOC,KAAP,EAAc;AACd,UAAMlB,GAAG,CAACE,mBAAmB,CAACgB,KAAD,CAApB,CAAT;AACD;AACF;AACD,OAAO,UAAUC,eAAV,CAA0B;AAAEC,EAAAA;AAAF,CAA1B,EAAuC;AAC5C;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;;AACA,MAAI,CACF;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GARD,CAQE,OAAOF,KAAP,EAAc;AACd,UAAMlB,GAAG,CAACG,kBAAkB,CAACe,KAAD,CAAnB,CAAT;AACD;AACF;AACD,OAAO,UAAUK,iBAAV,GAA8B;AACnC,QAAM1B,UAAU,CAACQ,eAAe,CAACmB,mBAAjB,EAAsCd,gBAAtC,CAAhB;AACD;AACD,OAAO,UAAUe,kBAAV,GAA+B;AACpC,QAAM5B,UAAU,CAACQ,eAAe,CAACqB,kBAAjB,EAAqCP,eAArC,CAAhB;AACD;AACD,OAAO,UAAUQ,QAAV,GAAqB;AAC1B,QAAM5B,GAAG,CAAC,CAACD,IAAI,CAACyB,iBAAD,CAAL,EAA0BzB,IAAI,CAAC2B,kBAAD,CAA9B,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, call, all, put } from \"redux-saga/effects\";\n\nimport {\n  googleSignInSucess,\n  googleSignInFailure,\n  emailSignInFailure,\n  emailSignInSuccess\n} from \"./user.actions\";\nimport UserActionTypes from \"./user.types\";\n\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n  convertCollectionsSnapshotToMap\n} from \"../../firebase/firebase.utils\";\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapShot = yield userRef.get();\n    yield put(\n      googleSignInSucess({ id: userSnapShot.id, ...userSnapShot.data() })\n    );\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* signInWithEmail({ payload }) {\n  // console.log(email, password);\n  console.log(payload);\n  try {\n    // const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    // console.log(user);\n    // const userRef = yield call(createUserProfileDocument, user);\n    // const userSnapShot = yield userRef.get();\n    // yield put(\n    //   emailSignInSuccess({ id: userSnapShot.id, ...userSnapShot.data() })\n    // );\n  } catch (error) {\n    yield put(emailSignInFailure(error));\n  }\n}\nexport function* onGoogleSignStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGNIN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGNIN_START, signInWithEmail);\n}\nexport function* UserSaga() {\n  yield all([call(onGoogleSignStart), call(onEmailSignInStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}