{"ast":null,"code":"import _defineProperty from \"/run/media/xeeno/Projects/React/Ecommerce/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { takeLatest, call, all } from \"redux-saga/effects\";\nimport { googleSignInStart, googleSignInSucess, googleSignInFailure } from \"./user.actions\";\nimport UserActionTypes from \"./user.types\";\nimport { auth, googleProvider, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nexport function* signInWithGoogle() {\n  try {\n    const user = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const UserSnapShot = yield userRef.get();\n    userRef.put(googleSignInSucess(_objectSpread({\n      id: UserSnapShot.id\n    }, UserSnapShot.data())));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* onGoogleSignStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGNIN_START, signInWithGoogle);\n}\nexport function* UserSaga() {\n  yield all([call(onGoogleSignStart)]);\n}","map":{"version":3,"sources":["/run/media/xeeno/Projects/React/Ecommerce/src/redux/user/user.sagas.js"],"names":["takeLatest","call","all","googleSignInStart","googleSignInSucess","googleSignInFailure","UserActionTypes","auth","googleProvider","createUserProfileDocument","signInWithGoogle","user","signInWithPopup","userRef","UserSnapShot","get","put","id","data","error","onGoogleSignStart","GOOGLE_SIGNIN_START","UserSaga"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,QAAsC,oBAAtC;AAEA,SAAWC,iBAAX,EAA8BC,kBAA9B,EAAkDC,mBAAlD,QAA6E,gBAA7E;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SACEC,IADF,EAEEC,cAFF,EAGEC,yBAHF,QAIO,+BAJP;AAKA,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMJ,IAAI,CAACK,eAAL,CAAqBJ,cAArB,CAAnB;AACA,UAAMK,OAAO,GAAG,MAAMZ,IAAI,CAACQ,yBAAD,EAA6BE,IAA7B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACAF,IAAAA,OAAO,CAACG,GAAR,CACIZ,kBAAkB;AAAEa,MAAAA,EAAE,EAACH,YAAY,CAACG;AAAlB,OAAwBH,YAAY,CAACI,IAAb,EAAxB,EADtB;AAGH,GAPC,CAOA,OAAOC,KAAP,EAAc;AACZ,UAAMH,GAAG,CAACX,mBAAmB,CAACc,KAAD,CAApB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,iBAAV,GAA8B;AAEnC,QAAMpB,UAAU,CAACM,eAAe,CAACe,mBAAjB,EAAqCX,gBAArC,CAAhB;AACD;AAED,OAAO,UAAUY,QAAV,GAAqB;AAC1B,QAAMpB,GAAG,CAAC,CAACD,IAAI,CAACmB,iBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, call, all } from \"redux-saga/effects\";\n\nimport   { googleSignInStart, googleSignInSucess, googleSignInFailure } from \"./user.actions\";\nimport UserActionTypes from \"./user.types\";\n\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument\n} from \"../../firebase/firebase.utils\";\nexport function* signInWithGoogle() {\n  try {\n    const user = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument , user)\n    const UserSnapShot = yield userRef.get()\n    userRef.put(\n        googleSignInSucess({id:UserSnapShot.id,...UserSnapShot.data()})\n    )\n} catch (error) {\n    yield put(googleSignInFailure(error))\n  }\n}\n\nexport function* onGoogleSignStart() {\n    \n  yield takeLatest(UserActionTypes.GOOGLE_SIGNIN_START,signInWithGoogle);\n}\n\nexport function* UserSaga() {\n  yield all([call(onGoogleSignStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}