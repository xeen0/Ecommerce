{"ast":null,"code":"import _defineProperty from \"/mnt/B48E87058E86BF7C/React/Ecommerce/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/mnt/B48E87058E86BF7C/React/Ecommerce/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/mnt/B48E87058E86BF7C/React/Ecommerce/src/components/signup/sign-up.component.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./sign-up.styles.scss\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { signUpStart } from \"../../redux/user/user.actions\";\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  // constructor() {\n  //   super();\n  //   this.state = {\n  //     displayName: \"\",\n  //     email: \"\",\n  //     password: \"\",\n  //     confirmPassword: \"\"\n  //   };\n  // }\n  const _useState = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCreadentials = _useState2[0],\n        setCreadentials = _useState2[1];\n\n  const displayName = userCreadentials.displayName,\n        email = userCreadentials.email,\n        password = userCreadentials.password,\n        confirmPassword = userCreadentials.confirmPassword;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Passwords did not match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    setCreadentials(_objectSpread({}, userCreadentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"I don't have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"create account\"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: this.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    onChange: handleChange,\n    value: displayName,\n    label: \"Display Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    onChange: handleChange,\n    value: email,\n    label: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    onChange: handleChange,\n    value: password,\n    label: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    onChange: handleChange,\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    label: \"confirmPassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Sign Up\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCreditials => dispatch(signUpStart(userCreditials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/mnt/B48E87058E86BF7C/React/Ecommerce/src/components/signup/sign-up.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","SignUp","displayName","email","password","confirmPassword","userCreadentials","setCreadentials","handleSubmit","event","preventDefault","alert","handleChange","target","name","value","mapDispatchToProps","dispatch","userCreditials"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./sign-up.styles.scss\";\r\nimport FormInput from \"../form-input/form-input.component\";\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\nimport { signUpStart } from \"../../redux/user/user.actions\";\r\nconst SignUp = ({ signUpStart }) => {\r\n  // constructor() {\r\n  //   super();\r\n  //   this.state = {\r\n  //     displayName: \"\",\r\n  //     email: \"\",\r\n  //     password: \"\",\r\n  //     confirmPassword: \"\"\r\n  //   };\r\n  // }\r\n  const [userCreadentials, setCreadentials] = useState({\r\n    displayName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\"\r\n  });\r\n  const { displayName, email, password, confirmPassword } = userCreadentials;\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      alert(\"Passwords did not match\");\r\n      return;\r\n    }\r\n    signUpStart({ displayName, email, password });\r\n  };\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n    setCreadentials({ ...userCreadentials, [name]: value });\r\n  };\r\n  return (\r\n    <div className=\"sign-up\">\r\n      <h1 className=\"title\">I don't have an account</h1>\r\n      <span>create account</span>\r\n      <form className=\"sign-up-form\" onSubmit={this.handleSubmit}>\r\n        <FormInput\r\n          type=\"text\"\r\n          name=\"displayName\"\r\n          onChange={handleChange}\r\n          value={displayName}\r\n          label=\"Display Name\"\r\n        />\r\n        <FormInput\r\n          type=\"email\"\r\n          name=\"email\"\r\n          onChange={handleChange}\r\n          value={email}\r\n          label=\"Email\"\r\n        />\r\n        <FormInput\r\n          type=\"password\"\r\n          name=\"password\"\r\n          onChange={handleChange}\r\n          value={password}\r\n          label=\"Password\"\r\n        />\r\n        <FormInput\r\n          type=\"password\"\r\n          onChange={handleChange}\r\n          name=\"confirmPassword\"\r\n          value={confirmPassword}\r\n          label=\"confirmPassword\"\r\n        />\r\n        <CustomButton type=\"submit\">Sign Up</CustomButton>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nconst mapDispatchToProps = dispatch => ({\r\n  signUpStart: userCreditials => dispatch(signUpStart(userCreditials))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);\r\n"]},"metadata":{},"sourceType":"module"}