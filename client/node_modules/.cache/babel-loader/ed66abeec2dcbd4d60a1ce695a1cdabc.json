{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport logger from 'redux-logger';\nimport rootReducer from './root-reducer'; // import thunk from 'redux-thunk'\n\nimport createSagaMiddileware from 'redux-saga';\nimport { fetchCollectionAsync } from './shop/shop.sagas';\nconst sagaMiddleWare = createSagaMiddileware();\nconst middlewares = [sagaMiddleWare];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleWare.run(fetchCollectionAsync);\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["D:\\React\\Ecommerce\\src\\redux\\store.js"],"names":["createStore","applyMiddleware","persistStore","logger","rootReducer","createSagaMiddileware","fetchCollectionAsync","sagaMiddleWare","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAAQA,WAAR,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA4B,eAA5B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,WAAP,MAAwB,gBAAxB,C,CACA;;AACA,OAAOC,qBAAP,MAAmC,YAAnC;AACA,SAASC,oBAAT,QAAqC,mBAArC;AACA,MAAMC,cAAc,GAAGF,qBAAqB,EAA5C;AACA,MAAMG,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,IAAGE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA5B,EAA0C;AACtCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBT,MAAjB;AACH;;AAEA,OAAO,MAAOU,KAAK,GAAGb,WAAW,CAACI,WAAD,EAAeH,eAAe,CAAC,GAAGO,WAAJ,CAA9B,CAA1B;AACPD,cAAc,CAACO,GAAf,CAAmBR,oBAAnB;AAED,OAAO,MAAMS,SAAS,GAAGb,YAAY,CAACW,KAAD,CAA9B;AACP,eAAe;AAACA,EAAAA,KAAD;AAASE,EAAAA;AAAT,CAAf","sourcesContent":["import {createStore , applyMiddleware } from 'redux'\r\nimport { persistStore} from 'redux-persist' \r\nimport logger from 'redux-logger'\r\nimport rootReducer from './root-reducer'\r\n// import thunk from 'redux-thunk'\r\nimport createSagaMiddileware  from 'redux-saga'\r\nimport { fetchCollectionAsync } from './shop/shop.sagas'\r\nconst sagaMiddleWare = createSagaMiddileware()\r\nconst middlewares = [sagaMiddleWare]\r\n\r\nif(process.env.NODE_ENV === 'development'){\r\n    middlewares.push(logger)\r\n}\r\n\r\n export const  store = createStore(rootReducer , applyMiddleware(...middlewares))\r\n sagaMiddleWare.run(fetchCollectionAsync)\r\n\r\nexport const persistor = persistStore(store);\r\nexport default {store , persistor}"]},"metadata":{},"sourceType":"module"}