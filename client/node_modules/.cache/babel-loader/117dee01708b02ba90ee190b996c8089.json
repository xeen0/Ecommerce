{"ast":null,"code":"var _jsxFileName = \"/run/media/xeeno/Projects/React/Ecommerce/src/components/cart-dropdown/cart-dropdown.component.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./cart-dropdown.styles.scss\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport CartItems from \"../cart-items/cart-items.component\";\nimport { selectCartItems } from \"../../redux/cart/cart.selector\";\nimport { createStructuredSelector } from \"reselect\";\nimport { toggleCartHidden } from \"../../redux/cart/cart.actions\";\n\nconst CartDropDown = ({\n  cartItem,\n  history,\n  dispatch\n}) => React.createElement(\"div\", {\n  className: \"cart-dropdown\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, cartItem.length ? React.createElement(\"div\", {\n  className: \"cart-items\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, cartItem.map(cartItem => React.createElement(CartItems, {\n  key: cartItem.id,\n  item: cartItem,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}))) : React.createElement(\"span\", {\n  className: \"empty-message\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, \"Your cart is empty\"), React.createElement(CustomButton, {\n  onClick: () => {\n    history.push(\"/checkout\");\n    dispatch(toggleCartHidden());\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, \" \", \"Go To CheckOut\", \" \"));\n\nconst mapStateToProps = createStructuredSelector({\n  cartItem: selectCartItems\n});\nexport default withRouter(connect(mapStateToProps)(CartDropDown));","map":{"version":3,"sources":["/run/media/xeeno/Projects/React/Ecommerce/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","connect","withRouter","CustomButton","CartItems","selectCartItems","createStructuredSelector","toggleCartHidden","CartDropDown","cartItem","history","dispatch","length","map","id","push","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAO,6BAAP;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,gBAAT,QAAiC,+BAAjC;;AACA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA;AAArB,CAAD,KACnB;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGF,QAAQ,CAACG,MAAT,GACC;AAAK,EAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGH,QAAQ,CAACI,GAAT,CAAaJ,QAAQ,IACpB,oBAAC,SAAD;AAAW,EAAA,GAAG,EAAEA,QAAQ,CAACK,EAAzB;AAA6B,EAAA,IAAI,EAAEL,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,CADH,CADD,GAOC;AAAM,EAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBARJ,EAUE,oBAAC,YAAD;AACE,EAAA,OAAO,EAAE,MAAM;AACbC,IAAAA,OAAO,CAACK,IAAR,CAAa,WAAb;AACAJ,IAAAA,QAAQ,CAACJ,gBAAgB,EAAjB,CAAR;AACD,GAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAMG,GANH,oBAOiB,GAPjB,CAVF,CADF;;AAsBA,MAAMS,eAAe,GAAGV,wBAAwB,CAAC;AAC/CG,EAAAA,QAAQ,EAAEJ;AADqC,CAAD,CAAhD;AAIA,eAAeH,UAAU,CAACD,OAAO,CAACe,eAAD,CAAP,CAAyBR,YAAzB,CAAD,CAAzB","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport \"./cart-dropdown.styles.scss\";\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\nimport CartItems from \"../cart-items/cart-items.component\";\r\nimport { selectCartItems } from \"../../redux/cart/cart.selector\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { toggleCartHidden } from \"../../redux/cart/cart.actions\";\r\nconst CartDropDown = ({ cartItem, history, dispatch }) => (\r\n  <div className=\"cart-dropdown\">\r\n    {cartItem.length ? (\r\n      <div className=\"cart-items\">\r\n        {cartItem.map(cartItem => (\r\n          <CartItems key={cartItem.id} item={cartItem} />\r\n        ))}\r\n      </div>\r\n    ) : (\r\n      <span className=\"empty-message\">Your cart is empty</span>\r\n    )}\r\n    <CustomButton\r\n      onClick={() => {\r\n        history.push(\"/checkout\");\r\n        dispatch(toggleCartHidden());\r\n      }}\r\n    >\r\n      {\" \"}\r\n      Go To CheckOut{\" \"}\r\n    </CustomButton>\r\n  </div>\r\n);\r\nconst mapStateToProps = createStructuredSelector({\r\n  cartItem: selectCartItems\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps)(CartDropDown));\r\n"]},"metadata":{},"sourceType":"module"}