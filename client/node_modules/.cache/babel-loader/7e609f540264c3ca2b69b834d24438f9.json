{"ast":null,"code":"import { ShopActionTypes } from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionStart = collections => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionSuccess = mapCollection => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: mapCollection\n});\nexport const fetchCollectionFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionStart());\n    collectionRef.get().then(snapshot => {\n      const mapCollection = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionSuccess(mapCollection));\n    }).catch(error => {\n      return dispatch(fetchCollectionFailure(error));\n    });\n  };\n};","map":{"version":3,"sources":["D:\\React\\Ecommerce\\src\\redux\\shop\\shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionStart","collections","type","FETCH_COLLECTIONS_START","fetchCollectionSuccess","mapCollection","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,cAA9B;AACA,SAAQC,SAAR,EAAoBC,+BAApB,QAA0D,+BAA1D;AAEA,OAAO,MAAMC,oBAAoB,GAAIC,WAAD,KAAiB;AACjDC,EAAAA,IAAI,EAACL,eAAe,CAACM;AAD4B,CAAjB,CAA7B;AAGP,OAAO,MAAMC,sBAAsB,GAAGC,aAAa,KAAG;AAClDH,EAAAA,IAAI,EAAEL,eAAe,CAACS,yBAD4B;AAElDC,EAAAA,OAAO,EAAGF;AAFwC,CAAH,CAA5C;AAIP,OAAO,MAAMG,sBAAsB,GAAGC,YAAY,KAAK;AACnDP,EAAAA,IAAI,EAAGL,eAAe,CAACa,yBAD4B;AAEnDH,EAAAA,OAAO,EAACE;AAF2C,CAAL,CAA3C;AAKP,OAAO,MAAME,yBAAyB,GAAG,MAAM;AAC3C,SAAOC,QAAQ,IAAI;AACf,UAAMC,aAAa,GAAGf,SAAS,CAACgB,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACZ,oBAAoB,EAArB,CAAR;AACJa,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAA0BC,QAAQ,IAAI;AACpC,YAAMZ,aAAa,GAAGN,+BAA+B,CAACkB,QAAD,CAArD;AACEL,MAAAA,QAAQ,CAACR,sBAAsB,CAACC,aAAD,CAAvB,CAAR;AACH,KAHD,EAGGa,KAHH,CAGSC,KAAK,IAAI;AACd,aAAOP,QAAQ,CAACJ,sBAAsB,CAACW,KAAD,CAAvB,CAAf;AACH,KALD;AAMC,GATD;AAUH,CAXM","sourcesContent":["import {ShopActionTypes} from './shop.types'\r\nimport {firestore , convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils'\r\n\r\nexport const fetchCollectionStart = (collections) =>({\r\n    type:ShopActionTypes.FETCH_COLLECTIONS_START,\r\n})\r\nexport const fetchCollectionSuccess = mapCollection=>({\r\n    type :ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n    payload : mapCollection\r\n})\r\nexport const fetchCollectionFailure = errorMessage => ({\r\n    type : ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\r\n    payload:errorMessage\r\n})\r\n\r\nexport const fetchCollectionStartAsync = () => {\r\n    return dispatch => {\r\n        const collectionRef = firestore.collection(\"collections\");\r\n        dispatch(fetchCollectionStart())\r\n    collectionRef.get().then( snapshot => {\r\n      const mapCollection = convertCollectionsSnapshotToMap(snapshot);\r\n        dispatch(fetchCollectionSuccess(mapCollection))\r\n    }).catch(error => {\r\n        return dispatch(fetchCollectionFailure(error))\r\n    });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}