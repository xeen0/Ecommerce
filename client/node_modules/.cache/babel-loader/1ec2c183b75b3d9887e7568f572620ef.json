{"ast":null,"code":"import { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { ShopActionTypes } from './shop.types';\nexport const collectionsFecthingStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTION_START\n});\nexport const collectionsFetchingSuccess = mapCollection => ({\n  type: ShopActionTypes.FETCH_COLLECTION_SUCCESS,\n  payload: mapCollection\n});\nexport const collectionsFecthingFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTION_FAILURE,\n  payload: errorMessage\n});\nexport const collectionsFecthingStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(collectionsFecthingStart());\n    collectionRef.get().then(async snapshot => {\n      const mapCollection = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(collectionsFetchingSuccess(mapCollection));\n    }).catch(error => dispatch(error.message));\n  };\n};","map":{"version":3,"sources":["D:\\React\\Ecommerce\\src\\redux\\shop\\shop.actions.js"],"names":["firestore","convertCollectionsSnapshotToMap","ShopActionTypes","collectionsFecthingStart","type","FETCH_COLLECTION_START","collectionsFetchingSuccess","mapCollection","FETCH_COLLECTION_SUCCESS","payload","collectionsFecthingFailure","errorMessage","FETCH_COLLECTION_FAILURE","collectionsFecthingStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,SAAQA,SAAR,EAAoBC,+BAApB,QAA0D,+BAA1D;AAEA,SAAQC,eAAR,QAA8B,cAA9B;AAGA,OAAO,MAAMC,wBAAwB,GAAG,OAAM;AAC1CC,EAAAA,IAAI,EAACF,eAAe,CAACG;AADqB,CAAN,CAAjC;AAIP,OAAO,MAAMC,0BAA0B,GAAGC,aAAa,KAAK;AACxDH,EAAAA,IAAI,EAACF,eAAe,CAACM,wBADmC;AAExDC,EAAAA,OAAO,EAAGF;AAF8C,CAAL,CAAhD;AAKP,OAAO,MAAMG,0BAA0B,GAAGC,YAAY,KAAK;AACvDP,EAAAA,IAAI,EAACF,eAAe,CAACU,wBADkC;AAEvDH,EAAAA,OAAO,EAACE;AAF+C,CAAL,CAA/C;AAKP,OAAO,MAAME,6BAA6B,GAAG,MAAI;AAC7C,SAAOC,QAAQ,IAAI;AACnB,UAAMC,aAAa,GAAGf,SAAS,CAACgB,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,wBAAwB,EAAzB,CAAR;AACAY,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyB,MAAMC,QAAN,IAAkB;AACzC,YAAMZ,aAAa,GAAGN,+BAA+B,CAACkB,QAAD,CAArD;AACDL,MAAAA,QAAQ,CAACR,0BAA0B,CAACC,aAAD,CAA3B,CAAR;AACA,KAHD,EAGGa,KAHH,CAGSC,KAAK,IAAIP,QAAQ,CAACO,KAAK,CAACC,OAAP,CAH1B;AAIC,GAPD;AAQH,CATM","sourcesContent":["import {firestore , convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils'\r\n\r\nimport {ShopActionTypes} from './shop.types'\r\n\r\n\r\nexport const collectionsFecthingStart = () =>({\r\n    type:ShopActionTypes.FETCH_COLLECTION_START,\r\n})\r\n\r\nexport const collectionsFetchingSuccess = mapCollection => ({\r\n    type:ShopActionTypes.FETCH_COLLECTION_SUCCESS,\r\n    payload : mapCollection\r\n})\r\n\r\nexport const collectionsFecthingFailure = errorMessage => ({\r\n    type:ShopActionTypes.FETCH_COLLECTION_FAILURE,\r\n    payload:errorMessage\r\n})\r\n\r\nexport const collectionsFecthingStartAsync = ()=>{\r\n    return dispatch => {\r\n    const collectionRef = firestore.collection(\"collections\");\r\n    dispatch(collectionsFecthingStart())\r\n    collectionRef.get().then(async snapshot => {\r\n      const mapCollection = convertCollectionsSnapshotToMap(snapshot);\r\n     dispatch(collectionsFetchingSuccess(mapCollection))\r\n    }).catch(error => dispatch(error.message));\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}