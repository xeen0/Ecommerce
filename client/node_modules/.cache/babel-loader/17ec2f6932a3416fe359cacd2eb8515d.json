{"ast":null,"code":"import _defineProperty from \"/mnt/B48E87058E86BF7C/React/Ecommerce/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { takeLatest, call, all, put } from \"redux-saga/effects\";\nimport { SignInFailure, SignInSucess } from \"./user.actions\";\nimport UserActionTypes from \"./user.types\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nexport function* getSnapShot(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapShot = yield userRef.get();\n    yield put(SignInSucess(_objectSpread({\n      id: userSnapShot.id\n    }, userSnapShot.data())));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapShot(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapShot(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    SignInSucess(userAuth);\n  } catch (error) {\n    SignInFailure(error);\n  }\n}\nexport function* onGoogleSignStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGNIN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGNIN_START, signInWithEmail);\n}\nexport function* onCheckUsers() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, userAuthentication);\n}\nexport function* UserSaga() {\n  yield all([call(onGoogleSignStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/mnt/B48E87058E86BF7C/React/Ecommerce/src/redux/user/user.sagas.js"],"names":["takeLatest","call","all","put","SignInFailure","SignInSucess","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","getSnapShot","userAuth","userRef","userSnapShot","get","id","data","error","signInWithGoogle","signInWithPopup","user","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","onGoogleSignStart","GOOGLE_SIGNIN_START","onEmailSignInStart","EMAIL_SIGNIN_START","onCheckUsers","CHECK_USER_SESSION","userAuthentication","UserSaga"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AAEA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,gBAA5C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SACEC,IADF,EAEEC,cAFF,EAGEC,yBAHF,EAIEC,cAJF,QAKO,+BALP;AAOA,OAAO,UAAUC,WAAV,CAAsBC,QAAtB,EAAgC;AACrC,MAAI;AACF,UAAMC,OAAO,GAAG,MAAMZ,IAAI,CAACQ,yBAAD,EAA4BG,QAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMZ,GAAG,CAACE,YAAY;AAAGW,MAAAA,EAAE,EAAEF,YAAY,CAACE;AAApB,OAA2BF,YAAY,CAACG,IAAb,EAA3B,EAAb,CAAT;AACD,GAJD,CAIE,OAAOC,KAAP,EAAc;AACd,UAAMf,GAAG,CAACC,aAAa,CAACc,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AAAA,iBACe,MAAMZ,IAAI,CAACa,eAAL,CAAqBZ,cAArB,CADrB;AAAA,UACMa,IADN,QACMA,IADN;;AAEF,UAAMV,WAAW,CAACU,IAAD,CAAjB;AACD,GAHD,CAGE,OAAOH,KAAP,EAAc;AACd,UAAMf,GAAG,CAACC,aAAa,CAACc,KAAD,CAAd,CAAT;AACD;AACF;AACD,OAAO,UAAUI,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AACjE,MAAI;AAAA,kBACe,MAAMlB,IAAI,CAACmB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CADrB;AAAA,UACMJ,IADN,SACMA,IADN;;AAEF,UAAMV,WAAW,CAACU,IAAD,CAAjB;AACD,GAHD,CAGE,OAAOH,KAAP,EAAc;AACd,UAAMf,GAAG,CAACC,aAAa,CAACc,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUS,mBAAV,GAAgC;AACrC,MAAI;AACF,UAAMf,QAAQ,GAAG,MAAMF,cAAc,EAArC;AACAL,IAAAA,YAAY,CAACO,QAAD,CAAZ;AACD,GAHD,CAGE,OAAOM,KAAP,EAAc;AACdd,IAAAA,aAAa,CAACc,KAAD,CAAb;AACD;AACF;AAED,OAAO,UAAUU,iBAAV,GAA8B;AACnC,QAAM5B,UAAU,CAACM,eAAe,CAACuB,mBAAjB,EAAsCV,gBAAtC,CAAhB;AACD;AACD,OAAO,UAAUW,kBAAV,GAA+B;AACpC,QAAM9B,UAAU,CAACM,eAAe,CAACyB,kBAAjB,EAAqCT,eAArC,CAAhB;AACD;AAED,OAAO,UAAUU,YAAV,GAAyB;AAC9B,QAAMhC,UAAU,CAACM,eAAe,CAAC2B,kBAAjB,EAAqCC,kBAArC,CAAhB;AACD;AACD,OAAO,UAAUC,QAAV,GAAqB;AAC1B,QAAMjC,GAAG,CAAC,CAACD,IAAI,CAAC2B,iBAAD,CAAL,EAA0B3B,IAAI,CAAC6B,kBAAD,CAA9B,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, call, all, put } from \"redux-saga/effects\";\n\nimport { SignInFailure, SignInSucess } from \"./user.actions\";\nimport UserActionTypes from \"./user.types\";\n\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n  getCurrentUser\n} from \"../../firebase/firebase.utils\";\n\nexport function* getSnapShot(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapShot = yield userRef.get();\n    yield put(SignInSucess({ id: userSnapShot.id, ...userSnapShot.data() }));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapShot(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapShot(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    SignInSucess(userAuth);\n  } catch (error) {\n    SignInFailure(error);\n  }\n}\n\nexport function* onGoogleSignStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGNIN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGNIN_START, signInWithEmail);\n}\n\nexport function* onCheckUsers() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, userAuthentication);\n}\nexport function* UserSaga() {\n  yield all([call(onGoogleSignStart), call(onEmailSignInStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}