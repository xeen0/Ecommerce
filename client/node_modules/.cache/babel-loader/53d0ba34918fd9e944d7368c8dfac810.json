{"ast":null,"code":"import _objectSpread from \"/mnt/B48E87058E86BF7C/React/Ecommerce/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { takeLatest, call, all, put } from \"redux-saga/effects\";\nimport { SignInFailure, SignInSucess, SignOutFailure, SignOutSucess, signUpSuccess, signUpFailure } from \"./user.actions\";\nimport UserActionTypes from \"./user.types\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nexport function* getSnapShot(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapShot = yield userRef.get();\n    yield put(SignInSucess(_objectSpread({\n      id: userSnapShot.id\n    }, userSnapShot.data())));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapShot(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapShot(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* SignOut() {\n  try {\n    yield auth.signOut();\n    yield put(SignOutSucess());\n  } catch (error) {\n    yield put(SignOutFailure(error));\n  }\n} //check user to maintain persistance\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapShot(userAuth);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    displayName,\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref3 = yield auth.createUserWithEmailAndPassword(email, password),\n          user = _ref3.user;\n\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  console.log(\"sadad\");\n  yield getSnapShot(user, additionalData);\n} // connecting fuctions with respective to their actions\n\nexport function* onGoogleSignStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGNIN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGNIN_START, signInWithEmail);\n}\nexport function* onCheckUsers() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOut() {\n  yield takeLatest(UserActionTypes.SIGNOUT_START, SignOut);\n}\nexport function* onSignUp() {\n  yield takeLatest(UserActionTypes.SIGNUP_START, signUp);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGNUP_SUCCESS, signInAfterSignUp);\n}\nexport function* UserSaga() {\n  yield all([call(onGoogleSignStart), call(onEmailSignInStart), call(onCheckUsers), call(onSignOut), call(onSignUp), call(onSignUpSuccess)]);\n}","map":{"version":3,"sources":["/mnt/B48E87058E86BF7C/React/Ecommerce/client/src/redux/user/user.sagas.js"],"names":["takeLatest","call","all","put","SignInFailure","SignInSucess","SignOutFailure","SignOutSucess","signUpSuccess","signUpFailure","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","getSnapShot","userAuth","additionalData","userRef","userSnapShot","get","id","data","error","signInWithGoogle","signInWithPopup","user","signInWithEmail","payload","email","password","signInWithEmailAndPassword","SignOut","signOut","isUserAuthenticated","signUp","displayName","createUserWithEmailAndPassword","signInAfterSignUp","console","log","onGoogleSignStart","GOOGLE_SIGNIN_START","onEmailSignInStart","EMAIL_SIGNIN_START","onCheckUsers","CHECK_USER_SESSION","onSignOut","SIGNOUT_START","onSignUp","SIGNUP_START","onSignUpSuccess","SIGNUP_SUCCESS","UserSaga"],"mappings":"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","sourcesContent":["import { takeLatest, call, all, put } from \"redux-saga/effects\";\n\nimport {\n  SignInFailure,\n  SignInSucess,\n  SignOutFailure,\n  SignOutSucess,\n  signUpSuccess,\n  signUpFailure\n} from \"./user.actions\";\nimport UserActionTypes from \"./user.types\";\n\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n  getCurrentUser\n} from \"../../firebase/firebase.utils\";\n\nexport function* getSnapShot(userAuth, additionalData) {\n  try {\n    const userRef = yield call(\n      createUserProfileDocument,\n      userAuth,\n      additionalData\n    );\n    const userSnapShot = yield userRef.get();\n    yield put(SignInSucess({ id: userSnapShot.id, ...userSnapShot.data() }));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapShot(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapShot(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\n\nexport function* SignOut() {\n  try {\n    yield auth.signOut();\n    yield put(SignOutSucess());\n  } catch (error) {\n    yield put(SignOutFailure(error));\n  }\n}\n//check user to maintain persistance\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapShot(userAuth);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\n\nexport function* signUp({ payload: { displayName, email, password } }) {\n  try {\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n\n    yield put(signUpSuccess({ user, additionalData: { displayName } }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\n\nexport function* signInAfterSignUp({ payload: { user, additionalData } }) {\n  console.log(\"sadad\");\n  yield getSnapShot(user, additionalData);\n}\n\n// connecting fuctions with respective to their actions\nexport function* onGoogleSignStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGNIN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGNIN_START, signInWithEmail);\n}\n\nexport function* onCheckUsers() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* onSignOut() {\n  yield takeLatest(UserActionTypes.SIGNOUT_START, SignOut);\n}\nexport function* onSignUp() {\n  yield takeLatest(UserActionTypes.SIGNUP_START, signUp);\n}\n\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGNUP_SUCCESS, signInAfterSignUp);\n}\nexport function* UserSaga() {\n  yield all([\n    call(onGoogleSignStart),\n    call(onEmailSignInStart),\n    call(onCheckUsers),\n    call(onSignOut),\n    call(onSignUp),\n    call(onSignUpSuccess)\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}