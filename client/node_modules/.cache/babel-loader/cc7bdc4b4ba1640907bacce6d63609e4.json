{"ast":null,"code":"import { takeLatest, call, put } from \"redux-saga/effects\";\nimport { ShopActionTypes } from \"./shop.types\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { collectionsFetchingSuccess, collectionsFecthingFailure } from \"./shop.actions\";\nexport function* fetchCollectionAsync() {\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(collectionsFetchingSuccess(collectionsMap));\n  } catch (error) {\n    yield put(collectionsFecthingFailure(error.message));\n  }\n}\nexport function* fetchCollectionStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTION_START, fetchCollectionAsync);\n}","map":{"version":3,"sources":["D:\\React\\Ecommerce\\src\\redux\\shop\\shop.sagas.js"],"names":["takeLatest","call","put","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","collectionsFetchingSuccess","collectionsFecthingFailure","fetchCollectionAsync","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionStart","FETCH_COLLECTION_START"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,QAAsC,oBAAtC;AACA,SAASC,eAAT,QAAgC,cAAhC;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAIA,SACEC,0BADF,EAEEC,0BAFF,QAGO,gBAHP;AAIA,OAAO,UAAUC,oBAAV,GAAiC;AACtC,MAAI;AACF,UAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMZ,IAAI,CAC/BI,+BAD+B,EAE/BM,QAF+B,CAAjC;AAIA,UAAMT,GAAG,CAACI,0BAA0B,CAACO,cAAD,CAA3B,CAAT;AACD,GARD,CAQE,OAAOC,KAAP,EAAc;AACd,UAAMZ,GAAG,CAACK,0BAA0B,CAACO,KAAK,CAACC,OAAP,CAA3B,CAAT;AACD;AACF;AACD,OAAO,UAAUC,oBAAV,GAAiC;AACtC,QAAMhB,UAAU,CAACG,eAAe,CAACc,sBAAjB,EAAyCT,oBAAzC,CAAhB;AACD","sourcesContent":["import { takeLatest, call, put } from \"redux-saga/effects\";\r\nimport { ShopActionTypes } from \"./shop.types\";\r\nimport {\r\n  firestore,\r\n  convertCollectionsSnapshotToMap\r\n} from \"../../firebase/firebase.utils\";\r\nimport {\r\n  collectionsFetchingSuccess,\r\n  collectionsFecthingFailure\r\n} from \"./shop.actions\";\r\nexport function* fetchCollectionAsync() {\r\n  try {\r\n    const collectionRef = firestore.collection(\"collections\");\r\n    const snapshot = yield collectionRef.get();\r\n    const collectionsMap = yield call(\r\n      convertCollectionsSnapshotToMap,\r\n      snapshot\r\n    );\r\n    yield put(collectionsFetchingSuccess(collectionsMap));\r\n  } catch (error) {\r\n    yield put(collectionsFecthingFailure(error.message));\r\n  }\r\n}\r\nexport function* fetchCollectionStart() {\r\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTION_START, fetchCollectionAsync);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}