{"ast":null,"code":"import _defineProperty from \"D:\\\\React\\\\Ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nvar config = {\n  apiKey: \"AIzaSyD5ll7OTXQAs-YARb7ZKjwn-P6O4mwOt2w\",\n  authDomain: \"crown-ecomerce.firebaseapp.com\",\n  databaseURL: \"https://crown-ecomerce.firebaseio.com\",\n  projectId: \"crown-ecomerce\",\n  storageBucket: \"\",\n  messagingSenderId: \"932871776509\",\n  appId: \"1:932871776509:web:dfe5df364f6577460d3694\",\n  measurementId: \"G-H8Y78KLL7M\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = await firestore.doc(\"users/\".concat(userAuth.uid));\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const _ref = await userAuth,\n          displayName = _ref.displayName,\n          email = _ref.email;\n\n    const createdAt = await new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        displayName,\n        email,\n        createdAt\n      }, additionalData));\n    } catch (err) {\n      console.log('Error in creating user', err.message);\n    }\n  }\n\n  return userRef;\n}; // transfer our store data into firestore \n// export const collectionsAndDocuments =async  (collectionkey , ObjectToAdd) =>{\n//        const collectionRef = firestore.collection(collectionkey)\n//        const batch = firestore.batch()\n//        ObjectToAdd.forEach(obj => {\n//                const newDocRef = collectionRef.doc()\n//                batch.set(newDocRef , obj)\n//         })\n//         return await batch.commit()\n// }\n\nconst convertCollectionsSnapshotToMap = collections => {\n  console.log(collections.doc());\n};\n\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  'prompt ': 'Select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["D:\\React\\Ecommerce\\src\\firebase\\firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapshot","get","exists","displayName","email","createdAt","Date","set","err","console","log","message","convertCollectionsSnapshotToMap","collections","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","signInWithGoogle","signInWithPopup"],"mappings":";;;;;;AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAGA,IAAIC,MAAM,GAAG;AACLC,EAAAA,MAAM,EAAE,yCADH;AAELC,EAAAA,UAAU,EAAE,gCAFP;AAGLC,EAAAA,WAAW,EAAE,uCAHR;AAILC,EAAAA,SAAS,EAAE,gBAJN;AAKLC,EAAAA,aAAa,EAAE,EALV;AAMLC,EAAAA,iBAAiB,EAAE,cANd;AAOLC,EAAAA,KAAK,EAAE,2CAPF;AAQLC,EAAAA,aAAa,EAAE;AARV,CAAb;AAYA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AACrE,MAAI,CAACD,QAAL,EAAe;AACf,QAAME,OAAO,GAAG,MAAOC,SAAS,CAACC,GAAV,iBAAuBJ,QAAQ,CAACK,GAAhC,EAAvB;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AACA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AAAA,iBACkB,MAAMR,QADxB;AAAA,UACNS,WADM,QACNA,WADM;AAAA,UACOC,KADP,QACOA,KADP;;AAEd,UAAMC,SAAS,GAAG,MAAM,IAAIC,IAAJ,EAAxB;;AACA,QAAI;AACI,YAAMV,OAAO,CAACW,GAAR;AACEJ,QAAAA,WADF;AAEEC,QAAAA,KAFF;AAGEC,QAAAA;AAHF,SAIKV,cAJL,EAAN;AAMP,KAPD,CAOE,OAAOa,GAAP,EAAY;AACNC,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCF,GAAG,CAACG,OAA1C;AACP;AACR;;AACD,SAAOf,OAAP;AACP,CAnBM,C,CAoBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMgB,+BAA+B,GAAGC,WAAW,IAAI;AAC/CJ,EAAAA,OAAO,CAACC,GAAR,CAAYG,WAAW,CAACf,GAAZ,EAAZ;AACP,CAFD;;AAIAf,QAAQ,CAAC+B,aAAT,CAAuB9B,MAAvB;AACA,OAAO,MAAM+B,IAAI,GAAGhC,QAAQ,CAACgC,IAAT,EAAb;AACP,OAAO,MAAMlB,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAIP,MAAMmB,QAAQ,GAAG,IAAIjC,QAAQ,CAACgC,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAE,aAAW;AAAb,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAMJ,IAAI,CAACK,eAAL,CAAqBJ,QAArB,CAA/B;AACP,eAAejC,QAAf","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\n\nvar config = {\n        apiKey: \"AIzaSyD5ll7OTXQAs-YARb7ZKjwn-P6O4mwOt2w\",\n        authDomain: \"crown-ecomerce.firebaseapp.com\",\n        databaseURL: \"https://crown-ecomerce.firebaseio.com\",\n        projectId: \"crown-ecomerce\",\n        storageBucket: \"\",\n        messagingSenderId: \"932871776509\",\n        appId: \"1:932871776509:web:dfe5df364f6577460d3694\",\n        measurementId: \"G-H8Y78KLL7M\"\n\n}\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n        if (!userAuth) return\n        const userRef = await  firestore.doc(`users/${userAuth.uid}`)\n        const snapshot = await userRef.get()\n        if (!snapshot.exists) {\n                const { displayName, email }  = await userAuth\n                const createdAt = await new Date()\n                try {\n                        await userRef.set({\n                                displayName,\n                                email,\n                                createdAt,\n                                ...additionalData\n                        })\n                } catch (err) {\n                        console.log('Error in creating user', err.message)\n                }\n        }\n        return userRef\n}\n// transfer our store data into firestore \n// export const collectionsAndDocuments =async  (collectionkey , ObjectToAdd) =>{\n//        const collectionRef = firestore.collection(collectionkey)\n//        const batch = firestore.batch()\n//        ObjectToAdd.forEach(obj => {\n//                const newDocRef = collectionRef.doc()\n//                batch.set(newDocRef , obj)\n//         })\n//         return await batch.commit()\n// }\n\nconst convertCollectionsSnapshotToMap = collections => {\n        console.log(collections.doc())\n}\n\nfirebase.initializeApp(config)\nexport const auth = firebase.auth()\nexport const firestore = firebase.firestore()\n\n\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ 'prompt ': 'Select_account' })\nexport const signInWithGoogle = () => auth.signInWithPopup(provider)\nexport default firebase"]},"metadata":{},"sourceType":"module"}