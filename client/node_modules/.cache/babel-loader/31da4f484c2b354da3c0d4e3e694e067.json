{"ast":null,"code":"import { takeLatest, call, all } from \"redux-saga/effects\";\nimport { googleSignInStart } from \"./user.actions\";\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nexport function* signInWithGoogle() {\n  console.log(\"testing 123\");\n\n  try {\n    const UserRef = yield auth.signInWithPopup(googleProvider);\n    console.log(UserRef);\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function* onGoogleSignStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGNIN_START, googleSignInStart);\n}\nexport function* UserSaga() {\n  yield all([call(onGoogleSignStart)]);\n}","map":{"version":3,"sources":["/run/media/xeeno/Projects/React/Ecommerce/src/redux/user/user.sagas.js"],"names":["takeLatest","call","all","googleSignInStart","UserActionTypes","auth","googleProvider","createUserProfileDocument","signInWithGoogle","console","log","UserRef","signInWithPopup","error","onGoogleSignStart","GOOGLE_SIGNIN_START","UserSaga"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,QAAsC,oBAAtC;AAEA,SAAWC,iBAAX,QAAoC,gBAApC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAGA,SACEC,IADF,EAEEC,cAFF,EAGEC,yBAHF,QAIO,+BAJP;AAKA,OAAO,UAAUC,gBAAV,GAA6B;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;;AACF,MAAI;AACF,UAAMC,OAAO,GAAG,MAAMN,IAAI,CAACO,eAAL,CAAqBN,cAArB,CAAtB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACdJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACD;AACF;AAED,OAAO,UAAUC,iBAAV,GAA8B;AAEnC,QAAMd,UAAU,CAACI,eAAe,CAACW,mBAAjB,EAAqCZ,iBAArC,CAAhB;AACD;AAED,OAAO,UAAUa,QAAV,GAAqB;AAC1B,QAAMd,GAAG,CAAC,CAACD,IAAI,CAACa,iBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, call, all } from \"redux-saga/effects\";\n\nimport   { googleSignInStart } from \"./user.actions\";\nimport UserActionTypes from './user.types'\n\n\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument\n} from \"../../firebase/firebase.utils\";\nexport function* signInWithGoogle() {\n    console.log(\"testing 123\")\n  try {\n    const UserRef = yield auth.signInWithPopup(googleProvider);\n    console.log(UserRef);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function* onGoogleSignStart() {\n    \n  yield takeLatest(UserActionTypes.GOOGLE_SIGNIN_START,googleSignInStart);\n}\n\nexport function* UserSaga() {\n  yield all([call(onGoogleSignStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}