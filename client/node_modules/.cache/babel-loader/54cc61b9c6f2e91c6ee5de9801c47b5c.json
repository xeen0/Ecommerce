{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\Ecommerce\\\\src\\\\pages\\\\shopPage\\\\shoppage.component .jsx\";\nimport React from \"react\";\nimport CollectionsOverview from \"../../components/collection-overview/collection-overview.component\";\nimport { Route } from \"react-router-dom\";\nimport CategoryPage from \"../collectionPage/collections.component\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { connect } from \"react-redux\";\nimport { UpdateCollection } from \"../../redux/shop/shop.actions\";\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unSubscribeFromAuth = null;\n  }\n\n  componentDidMount() {\n    const collectionRef = firestore.collection(\"collections\");\n    collectionRef.onSnapshot(snapshot => {\n      const mapCollection = convertCollectionsSnapshotToMap(snapshot);\n      console.log(mapCollection);\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      component: CollectionsOverview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      component: CategoryPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapToDispatch = dispatch => ({\n  UpdateCollection: mapCollection => dispatch(UpdateCollection(mapCollection))\n});\n\nexport default connect(null, mapToDispatch)(ShopPage);","map":{"version":3,"sources":["D:\\React\\Ecommerce\\src\\pages\\shopPage\\shoppage.component .jsx"],"names":["React","CollectionsOverview","Route","CategoryPage","firestore","convertCollectionsSnapshotToMap","connect","UpdateCollection","ShopPage","Component","unSubscribeFromAuth","componentDidMount","collectionRef","collection","onSnapshot","snapshot","mapCollection","console","log","render","match","props","path","mapToDispatch","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,oEAAhC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,YAAP,MAAyB,yCAAzB;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAIA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,+BAAjC;;AACA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,mBADqC,GACf,IADe;AAAA;;AAErCC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACAD,IAAAA,aAAa,CAACE,UAAd,CAAyBC,QAAQ,IAAI;AACnC,YAAMC,aAAa,GAAGX,+BAA+B,CAACU,QAAD,CAArD;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;AACD,KAHD;AAID;;AAEDG,EAAAA,MAAM,GAAG;AAAA,UACCC,KADD,GACW,KAAKC,KADhB,CACCD,KADD;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKA,KAAK,CAACE,IAAX,CAAjB;AAAoC,MAAA,SAAS,EAAErB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,YAAKmB,KAAK,CAACE,IAAX,mBAAX;AAA4C,MAAA,SAAS,EAAEnB,YAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAlBoC;;AAqBvC,MAAMoB,aAAa,GAAGC,QAAQ,KAAK;AACjCjB,EAAAA,gBAAgB,EAAES,aAAa,IAAIQ,QAAQ,CAACjB,gBAAgB,CAACS,aAAD,CAAjB;AADV,CAAL,CAA9B;;AAIA,eAAeV,OAAO,CACpB,IADoB,EAEpBiB,aAFoB,CAAP,CAGbf,QAHa,CAAf","sourcesContent":["import React from \"react\";\nimport CollectionsOverview from \"../../components/collection-overview/collection-overview.component\";\nimport { Route } from \"react-router-dom\";\nimport CategoryPage from \"../collectionPage/collections.component\";\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap\n} from \"../../firebase/firebase.utils\";\nimport { connect } from \"react-redux\";\nimport { UpdateCollection } from \"../../redux/shop/shop.actions\";\nclass ShopPage extends React.Component {\n  unSubscribeFromAuth = null;\n  componentDidMount() {\n    const collectionRef = firestore.collection(\"collections\");\n    collectionRef.onSnapshot(snapshot => {\n      const mapCollection = convertCollectionsSnapshotToMap(snapshot);\n      console.log(mapCollection);\n    });\n  }\n\n  render() {\n    const { match } = this.props;\n    return (\n      <div className=\"shop-page\">\n        <Route exact path={`${match.path}`} component={CollectionsOverview} />\n        <Route path={`${match.path}/:collectionId`} component={CategoryPage} />\n      </div>\n    );\n  }\n}\n\nconst mapToDispatch = dispatch => ({\n  UpdateCollection: mapCollection => dispatch(UpdateCollection(mapCollection))\n});\n\nexport default connect(\n  null,\n  mapToDispatch\n)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}