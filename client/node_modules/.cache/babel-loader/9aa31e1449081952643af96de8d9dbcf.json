{"ast":null,"code":"import _defineProperty from \"/mnt/B48E87058E86BF7C/React/Ecommerce/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//redux file\n// for respective action it takes  state from the flow and returns the state with change back to flow\nimport UserActionTypes from \"./user.types\";\nconst INITIAL_STATE = {\n  currentUser: null,\n  error: null\n};\n\nconst UserReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case UserActionTypes.SIGNIN_SUCCESS:\n    case UserActionTypes.SIGNUP_SUCCESS:\n      return _objectSpread({}, state, {\n        currentUser: action.payload,\n        error: null\n      });\n\n    case UserActionTypes.SIGNOUT_SUCCESS:\n      return _objectSpread({}, state, {\n        currentUser: null,\n        error: null\n      });\n\n    case UserActionTypes.SIGNIN_FAILURE:\n    case UserActionTypes.SIGNOUT_FAILURE:\n    case UserActionTypes.SIGNUP_FAILURE:\n      return _objectSpread({}, state, {\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default UserReducer;","map":{"version":3,"sources":["/mnt/B48E87058E86BF7C/React/Ecommerce/src/redux/user/user-reducer.js"],"names":["UserActionTypes","INITIAL_STATE","currentUser","error","UserReducer","state","action","type","SIGNIN_SUCCESS","SIGNUP_SUCCESS","payload","SIGNOUT_SUCCESS","SIGNIN_FAILURE","SIGNOUT_FAILURE","SIGNUP_FAILURE"],"mappings":";;;;;;AAAA;AACA;AACA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,WAAW,EAAE,IADO;AAEpBC,EAAAA,KAAK,EAAE;AAFa,CAAtB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,eAAe,CAACQ,cAArB;AACA,SAAKR,eAAe,CAACS,cAArB;AACE,+BACKJ,KADL;AAEEH,QAAAA,WAAW,EAAEI,MAAM,CAACI,OAFtB;AAGEP,QAAAA,KAAK,EAAE;AAHT;;AAKF,SAAKH,eAAe,CAACW,eAArB;AACE,+BACKN,KADL;AAEEH,QAAAA,WAAW,EAAE,IAFf;AAGEC,QAAAA,KAAK,EAAE;AAHT;;AAKF,SAAKH,eAAe,CAACY,cAArB;AACA,SAAKZ,eAAe,CAACa,eAArB;AACA,SAAKb,eAAe,CAACc,cAArB;AACE,+BACKT,KADL;AAEEF,QAAAA,KAAK,EAAEG,MAAM,CAACI;AAFhB;;AAKF;AACE,aAAOL,KAAP;AAvBJ;AAyBD,CA1BD;;AA2BA,eAAeD,WAAf","sourcesContent":["//redux file\r\n// for respective action it takes  state from the flow and returns the state with change back to flow\r\nimport UserActionTypes from \"./user.types\";\r\n\r\nconst INITIAL_STATE = {\r\n  currentUser: null,\r\n  error: null\r\n};\r\n\r\nconst UserReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case UserActionTypes.SIGNIN_SUCCESS:\r\n    case UserActionTypes.SIGNUP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentUser: action.payload,\r\n        error: null\r\n      };\r\n    case UserActionTypes.SIGNOUT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentUser: null,\r\n        error: null\r\n      };\r\n    case UserActionTypes.SIGNIN_FAILURE:\r\n    case UserActionTypes.SIGNOUT_FAILURE:\r\n    case UserActionTypes.SIGNUP_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default UserReducer;\r\n"]},"metadata":{},"sourceType":"module"}